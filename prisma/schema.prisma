generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = process.env.DATABASE_URL
}

model arrangiert {
  pid     Int
  stid    Int
  person  person  @relation(fields: [pid], references: [pid], onDelete: Cascade, onUpdate: Cascade)
  stuecke stuecke @relation(fields: [stid], references: [stid], onDelete: Cascade, onUpdate: Cascade, map: "arrangiert_prid_fkey")

  @@id([stid, pid])
}

model komponiert {
  pid  Int
  stid Int

  person  person  @relation(fields: [pid], references: [pid], onDelete: Cascade, onUpdate: Cascade)
  stuecke stuecke @relation(fields: [stid], references: [stid], onDelete: Cascade, onUpdate: Cascade)

  @@id([stid, pid])
}

model person {
  pid        Int          @id @default(autoincrement())
  vorname    String?
  name       String?
  arrangiert arrangiert[]
  komponiert komponiert[]

  @@unique([name, vorname], name: "name_vorname_unique") // Ensure this exists
}

model programm {
  prid            Int               @id @default(autoincrement())
  datum           DateTime          @db.Date
  orchester       String?
  wird_genutzt_in wird_genutzt_in[]
}

model schrank {
  srid Int    @id @default(autoincrement())
  name String
}

model stuecke {
  stid            Int               @id @default(autoincrement())
  name            String
  schwierigkeit   String?
  genre           String?
  isdigitalisiert Boolean?
  jahr            Int?
  arrangiert      arrangiert[]
  komponiert      komponiert[]
  wird_genutzt_in wird_genutzt_in[]

  @@map("stueck") // This tells Prisma that the table in PostgreSQL is named "Stueck"
}

model user {
  uid           Int       @id @default(autoincrement())
  username      String    @unique
  password_hash String
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  is_admin      Boolean?  @default(false)
}

model wird_genutzt_in {
  prid     Int
  stid     Int
  programm programm @relation(fields: [prid], references: [prid], onDelete: NoAction, onUpdate: NoAction)
  stuecke  stuecke  @relation(fields: [stid], references: [stid], onDelete: NoAction, onUpdate: NoAction)

  @@id([prid, stid])
}
